name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    
    env:
      Solution_Name: LogoDetect.sln
      Project_Path: LogoDetect/LogoDetect.csproj

    steps:
    - name: Extract Version
      id: extract_version
      shell: bash
      run: |
        VERSION=$(echo "${GITHUB_REF_NAME}" | cut -c2-)
        echo "::set-output name=version::$VERSION"

    - uses: actions/checkout@v3  
      with:
        fetch-depth: 0

    - name: Setup .NET    
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies    
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build  
      run: dotnet build ${{ env.Solution_Name }} --configuration Release --no-restore

    - name: Publish  
      run: dotnet publish ${{ env.Project_Path }} --self-contained -r win-x64 -o LogoDetect/publish

    - name: Install Velopack CLI  
      run: dotnet tool install --global vpk
  
    - name: Log Velopack Command
      run: |
        echo vpk pack --packId "natevoci.LogoDetect" --packVersion "${{ steps.extract_version.outputs.version }}" --packDir "LogoDetect/publish" --mainExe "LogoDetect.exe"

    - name: Create Velopack Release
      run: |
        vpk pack --packId "natevoci.LogoDetect" --packVersion "${{ steps.extract_version.outputs.version }}" --packDir "LogoDetect/publish" --mainExe "LogoDetect.exe"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Releases
        asset_name: Releases
        asset_content_type: application/octet-stream

    - name: Upload Setup
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Releases/natevoci.LogoDetect-win-Setup.exe
        asset_name: natevoci.LogoDetect-win-Setup.exe
        asset_content_type: application/vnd.microsoft.portable-executable
